.shared_windows_runners:
  tags:
  - shared-windows
  - windows
  - windows-1809

stages:
  - build
  - deploy
## docker build does not end within the 1h limit
## thus it was build locally and transfered manually
#docker-ci:
#  stage: deploy
#  image: docker:19.03.8
#  services:
#    - docker:19.03.8-dind
#  script:
#    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
#    - export VERSION=`grep __version__ fordead/_version.py| sed -E 's/.*([0-9]+\.[0-9]+\.[0-9]+).*/\1/'`
#    - echo $CI_REGISTRY_IMAGE
#    - echo $VERSION
#    - docker pull $CI_REGISTRY_IMAGE:latest || true
#    - docker build --cache-from $CI_REGISTRY_IMAGE:latest -t $CI_REGISTRY_IMAGE:$VERSION .
#    - docker push $CI_REGISTRY_IMAGE:$VERSION
#  only:
#    - docker_ci

intall-win:
  stage: build
  extends:
    - .shared_windows_runners
  script:
    - Invoke-Expression ((Invoke-WebRequest -Uri https://micro.mamba.pm/install.ps1).Content)
    - micromamba init powershell
    - micromamba install -y -n base -f environment.yml
    - python -c "import fordead"
  only:
    - schedules
  

install-linux:
  stage: build
  image: mambaorg/micromamba
  variables:
    MAMBA_DOCKERFILE_ACTIVATE: 1
  script:
    - micromamba install -y -n base -f environment.yml
    - python -c "import fordead"
  only:
    - master

#[![version](https://img.shields.io/badge/dynamic/json.svg?label=version&url=https://gitlab.com/fordead/fordead_package/-/jobs/artifacts/master/raw/badges.json?job=badges&query=version&colorB=blue)](https://gitlab.com/fordead/fordead_package)
badges:
  stage: deploy
  image: python:latest
  script:
    - version=`grep __version__ fordead/_version.py| sed -E 's/.*([0-9]+\.[0-9]+\.[0-9]+).*/\1/'`
    - echo "{\"version\":\"$version\"}" > badges.json
  artifacts:
    paths:
      - badges.json
  only:
    - master


pages:
  stage: deploy
  image: $CI_REGISTRY/fordead/fordead_package:latest
  script:
    - conda init bash
    - source ~/.bashrc
    - conda activate fordead
    - python -V  # Print out python version for debugging
    - pip install .
    - portray as_html -c pyproject_doc.toml
    - mv site public
  artifacts:
    paths:
     - public
  only:
   - master
   - pages
